import _file_.model._

def distance(vs: Vector[Array[Int]]) = {
  val data = Array(0.0,1.0,14.0,31.0,33.5,28.5,14.5,6.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)
  absoluteDistance(data, vs.transpose.map(_.median))
}

val env = EGIEnvironment("vo.complex-systems.eu")

NSGA2Evolution(
  evaluation = model,
  genome = Seq(
    humanInformedRatio in (0.0, 1.0),
    humanInformProbability in (0.0, 1.0),
    humanFollowProbability in (0.0, 1.0)
  ),
  objectives = Seq(rescuedDynamic aggregate distance),
  termination = 100000,
  parallelism = 200,
  distribution = Island(5 minutes),
  stochastic = Stochastic(seed = seed)
) hook (workDirectory / "results/calibration/distance", frequency = 100) on env