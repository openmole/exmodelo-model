import zombies._

// Model inputs
val humanFollowProbability = Val[Double]
val humanInformedRatio = Val[Double]
val humanInformProbability = Val[Double]

val mySeed = Val[Long]

// Model outputs
val peakTime = Val[Double]
val peakSize = Val[Double]

val totalZombified = Val[Double]
val halfZombified = Val[Double]

val spatialMoranZombified = Val[Double]
val spatialDistanceMeanZombified = Val[Double]
val spatialEntropyZombified = Val[Double]
val spatialSlopeZombified = Val[Double]

val model =
  ScalaTask("""
    import zombies._

    val result = zombieInvasion(
      zombies = 4,
      humans = 250,
      steps = 500,
      random = Random(mySeed),

      humanFollowProbability = humanFollowProbability,
      humanInformedRatio = humanInformedRatio,
      humanInformProbability = humanInformProbability
    )

    val peakTime = result.peakTimeZombified(window = 5).toDouble
    val peakSize = result.peakSizeZombified(window = 5).toDouble
    val totalZombified = result.totalZombified.toDouble
    val halfZombified = result.halfZombified.toDouble
    val spatialMoranZombified = result.spatialMoranZombified
    val spatialDistanceMeanZombified = result.spatialDistanceMeanZombified
    val spatialEntropyZombified = result.spatialEntropyZombified
    val spatialSlopeZombified = result.spatialSlopeZombified
  """) set (
    inputs += (humanFollowProbability, humanInformedRatio, humanInformProbability),
    outputs += (
      peakTime,peakSize,
      totalZombified,
      halfZombified,
      spatialMoranZombified,
      spatialDistanceMeanZombified,
      spatialEntropyZombified,
      spatialSlopeZombified
    ),

    mySeed := 42,

    plugins += pluginsOf[zombies.agent.Agent]
  )

SensitivityMorris(
  evaluation = model,
  inputs = Seq(
    humanFollowProbability in (0.0, 1.0),
    humanInformedRatio in (0.0, 1.0),
    humanInformProbability in (0.0, 1.0)
  ),
  outputs = Seq(
    peakTime,
    peakSize,
    totalZombified,
    halfZombified,
    spatialMoranZombified,
    spatialDistanceMeanZombified,
    spatialEntropyZombified,
    spatialSlopeZombified
  ),
  sample = 10,
  level = 5
) hook (workDirectory / "morris")
