import zombies._

// Model inputs
val humanFollowProbability = Val[Double]
val humanInformedRatio = Val[Double]
val humanInformProbability = Val[Double]

val mySeed = Val[Long]

// Model outputs
val peakTime = Val[Double]
val peakSize = Val[Double]
val totalZombified = Val[Double]
val totalRescued = Val[Double]


val model =
  ScalaTask("""
    import zombies._

    val result = zombieInvasion(
      zombies = 4,
      humans = 250,
      steps = 500,
      random = Random(mySeed),

      humanFollowProbability = humanFollowProbability,
      humanInformedRatio = humanInformedRatio,
      humanInformProbability = humanInformProbability
    )

    val totalRescued = result.totalRescued
    val totalZombified = result.totalZombified
    val peakTime = result.peakTimeZombified(window = 5)
    val peakSize = result.peakSizeZombified(window = 5)
  """) set (
    (inputs,outputs) += (humanFollowProbability, humanInformedRatio, humanInformProbability, seed),
    outputs += (seed, totalRescued, totalZombified, peakTime, peakSize),
    mySeed := 42,
    plugins += pluginsOf[zombies.agent.Agent]
  )

SensitivityMorris(
  evaluation = model,
  inputs = Seq(
    humanFollowProbability in (0.0, 1.0),
    humanInformedRatio in (0.0, 1.0),
    humanInformProbability in (0.0, 1.0)
  ),
  outputs = Seq(totalRescued, totalZombified, peakTime, peakSize),
  sample = 10,
  level = 5
) hook (workDirectory / "morris")
