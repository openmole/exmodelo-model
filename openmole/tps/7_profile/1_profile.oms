// Model parameters
XXX

val seed = Val[Long]

// Output
val rescuedDynamic = Val[Array[Int]]

// Fitness
def distanceMedian(vs: Array[Array[Int]]): Double = {
  val medianData = Array(0, 0, 5, 12.5, 21.5, 24, 22, 29, 19.5, 11, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  val simulated = vs.transpose.map(_.median)
  absoluteDistance(medianData, simulated)
}

val model =
  ScalaTask("""
    import zombies._
    
    val rng = Random(seed)
  
    val result = zombieInvasion(
      humanFollowProbability = XXX,
      humanInformedRatio = XXX,
      humanInformProbability = XXX,
      zombies = 4,
      humans = 250,
      steps = 500,
      random = rng)
    
    val rescuedDynamic = result.rescuedDynamic()
  """) set (
    inputs += (XXX),
    outputs += (XXX),
    
    plugins += pluginsOf[zombies.agent.Agent]    
  )
  
ProfileEvolution(
    evaluation = XXX,
    objective = XXX,
    x = XXX,
    nX = XXX,
    genome = XXX,
    termination = XXX,
    stochastic = Stochastic(seed = seed)
  ) XXX